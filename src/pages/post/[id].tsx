import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import EditPostModal from "~/components/EditPostModal";

interface Props {
  isAdmin: boolean;
  editPost: Function;
  setEditPost: Function;
}

const Post = ({ isAdmin, editPost, setEditPost }: Props) => {
  const [posts, setPosts] = useState<any>([]);
  const router = useRouter();
  const { id } = router.query;

  const fetchPosts = async () => {
    await axios.get("/api/post").then((res) => {
      setPosts(res.data);
    });
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const post = posts.find((post: { id: string }) => post.id === id);

  const deletePost = async () => {
    await axios.delete(`/api/post?id=${post.id}`);
    router.push("/");
  };

  if (!post) {
    return (
      <>
        <Head>
          <title>News | 404</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className="flex h-screen items-center justify-center bg-gray-100">
          <div className="rounded-lg bg-white p-8 text-center shadow-md">
            <h1 className="mb-4 text-4xl font-bold text-red-500">404</h1>
            <h2 className="mb-4 text-2xl font-semibold">Post Not Found</h2>
            <p className="mb-6 text-gray-600">
              Sorry, the post you are looking for does not exist.
            </p>
            <Link href="/">
              <p className="rounded-md bg-blue-500 px-6 py-3 text-lg text-white hover:bg-blue-600">
                Go to Homepage
              </p>
            </Link>
          </div>
        </div>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>News | {post.title}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {isAdmin && (
        <div className="fixed right-52 top-24 flex flex-col items-start">
          <button onClick={() => setEditPost(true)}>
            <p className="text-blue-500">edit</p>
          </button>

          <button
            onClick={() => {
              if (confirm("Do you want to delete this post?")) {
                deletePost();
              }
            }}
          >
            <p className="text-red-500">delete</p>
          </button>
        </div>
      )}

      <div className="container mx-auto mt-20 max-w-4xl p-6">
        <article className="rounded-lg bg-white p-8 shadow-lg">
          <h1 className="mb-6 text-4xl font-extrabold text-gray-900">
            {post.title}
          </h1>
          <p className="text-lg leading-relaxed text-gray-700">
            {post.excerpt}
          </p>
        </article>
      </div>

      {editPost && (
        <EditPostModal
          initialTitle={post.title}
          initialExcerpt={post.excerpt}
          setEditPost={setEditPost}
          postId={post.id}
          fetchPosts={fetchPosts}
        />
      )}
    </>
  );
};

export default Post;
